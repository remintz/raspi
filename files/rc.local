#!/bin/bash
#
# rc.local
#
# This script is executed at the end of each multiuser runlevel.
# Make sure that the script will "exit 0" on success or any other
# value on error.
#
# In order to enable or disable this script just change the execution
# bits.
#
# By default this script does nothing.

# Print the IP address
_IP=$(hostname -I) || true
if [ "$_IP" ]; then
  printf "My IP address is %s\n" "$_IP"
fi

# RPi Network Conf Bootstrapper
 
createAdHocNetwork(){
    echo "Creating ad-hoc network"
    ifdown #INTERFACE
	killall dhclient
	wpa_supplicant -B -i #INTERFACE -c /etc/wpa_supplicant/wpa_supplicant.conf > /dev/null 2>&1
	wpa_cli -i#INTERFACE add_network
	wpa_cli -i#INTERFACE set_network 0 mode 1
	wpa_cli -i#INTERFACE set_network 0 ssid '"#ADHOC_SSID"'
	wpa_cli -i#INTERFACE set_network 0 key_mgmt NONE
    ifconfig #INTERFACE #ADHOC_IP_GROUP.200 netmask 255.255.255.0
	wpa_cli -i#INTERFACE enable_network 0
    ifconfig #INTERFACE up
    /usr/sbin/dhcpd #INTERFACE
    echo "Ad-hoc network created"
}
 
echo "================================="
echo "RPi Network Conf Bootstrapper 0.1"
echo "================================="
echo "Scanning for known WiFi networks"
ssids=( '#SSID' )
connected=false
for ssid in "${ssids[@]}"
do
    if iwlist #INTERFACE scan | grep #SSID > /dev/null
    then
        echo "First WiFi in range has SSID:" #SSID
        echo "Starting supplicant for WPA/WPA2"
        wpa_supplicant -B -i #INTERFACE -c /etc/wpa_supplicant/wpa_supplicant.conf > /dev/null 2>&1
        echo "Obtaining IP from DHCP"
        if dhclient -1 #INTERFACE
        then
            echo "Connected to WiFi"
            connected=true
            break
        else
            echo "DHCP server did not respond with an IP lease (DHCPOFFER)"
            wpa_cli terminate
            break
        fi
    else
        echo "Not in range, WiFi with SSID:" #SSID
    fi
done
 
if ! $connected; then
    createAdHocNetwork
fi
 
exit 0
